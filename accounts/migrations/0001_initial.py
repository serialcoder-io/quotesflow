# Generated by Django 5.2.5 on 2025-09-02 20:01

import django.db.models.deletion
import django_countries.fields
import django_quill.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='code')),
                ('value_type', models.CharField(choices=[('bool', 'Bool'), ('int', 'Int')], default='bool', help_text='the type of the value: form exp for feature send invoice to client by email, the type of the the vallue will be true or false', max_length=8, verbose_name='value type')),
                ('description', django_quill.fields.QuillField(verbose_name='description')),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
                'db_table': 'features',
            },
        ),
        migrations.CreateModel(
            name='OrgPermissions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='code')),
                ('label', models.CharField(max_length=60, verbose_name='label')),
            ],
            options={
                'verbose_name': 'organization permission',
                'verbose_name_plural': 'organization permissions',
                'db_table': 'org_permissions',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('free', 'Free'), ('starter', 'Starter'), ('premium', 'Premium'), ('entreprise', 'Entreprise')], default='free', max_length=12, verbose_name='plan name')),
                ('monthly_price', models.PositiveBigIntegerField()),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'db_table': 'subscription_plans',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='profile photo')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group', verbose_name='user groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'custom_user',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='organization name')),
                ('slug', models.CharField(db_index=True, max_length=100, null=True, unique=True)),
                ('is_org', models.BooleanField(default=True, verbose_name='is organization')),
                ('first_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Last name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='org_logos/', verbose_name='logo')),
                ('legal_id_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='legal ID name')),
                ('legal_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='legal ID value')),
                ('subscription_start', models.DateField(blank=True, null=True, verbose_name='subscription start date')),
                ('subscription_duration', models.PositiveIntegerField(default=1, verbose_name='duration in month')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='country')),
                ('address', models.CharField(max_length=200, verbose_name='address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owned_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
                'db_table': 'organizations',
            },
        ),
        migrations.CreateModel(
            name='OrganizationInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('token', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_users', to='accounts.organization', verbose_name='organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_organizations', to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('permissions', models.ManyToManyField(blank=True, to='accounts.orgpermissions', verbose_name='organization user permissions')),
            ],
            options={
                'verbose_name': 'organization user',
                'verbose_name_plural': 'organization users',
                'db_table': 'organization_users',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='users',
            field=models.ManyToManyField(through='accounts.OrganizationUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OrgRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='role name')),
                ('permissions', models.ManyToManyField(blank=True, to='accounts.orgpermissions', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'organization role',
                'verbose_name_plural': 'organization roles',
                'db_table': 'org_roles',
            },
        ),
        migrations.AddField(
            model_name='organizationuser',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.orgrole', verbose_name='organization user role'),
        ),
        migrations.AddField(
            model_name='organization',
            name='subscription_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.subscriptionplan', verbose_name='Subscription plan'),
        ),
        migrations.CreateModel(
            name='SubscriptionPlanFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=60, verbose_name='the value of the feature for the plan')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.feature', verbose_name='feature')),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.subscriptionplan', verbose_name='subscription plan')),
            ],
            options={
                'verbose_name': 'Subscription plan Feature',
                'verbose_name_plural': 'Subscription plan Features',
                'db_table': 'subscription_plan_features',
            },
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='features',
            field=models.ManyToManyField(through='accounts.SubscriptionPlanFeature', to='accounts.feature'),
        ),
    ]
